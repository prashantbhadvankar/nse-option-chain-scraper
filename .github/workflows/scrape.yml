name: Scrape NSE Option Chain

on:
  schedule:
    # small offset + every 15 mins on weekdays (UTC)
    - cron: "3-58/15 * * 1-5"
  workflow_dispatch: {}

# avoid overlapping runs fighting for cookies/IP
concurrency:
  group: nse-option-chain-${{ github.event_name }}   # separate groups per event
  cancel-in-progress: true                           # still prevents overlap *within* each event


jobs:
  scrape:
    # try the whole job twice before giving up (handles transient 403/timeout)
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        attempt: [1, 2]

    runs-on: ubuntu-latest

    services:
      selenium:
        image: selenium/standalone-firefox:latest
        ports:
          - 4444:4444
        options: >-
          --shm-size="2g"
          --health-cmd="curl -sf http://localhost:4444/status | grep -q '\"ready\": true' || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=60   # give Firefox time to be really ready

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Install R deps (pak)
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::RSelenium
            any::httr
            any::jsonlite
            any::dplyr
            any::tidyr
            any::readr
            any::writexl

      # Jitter so we don't always hit NSE at the exact same second as everyone else
      - name: Random jitter
        shell: bash
        run: |
          s=$((RANDOM % 15))
          echo "Sleeping ${s}s before scrape..."
          sleep $s

      - name: Wait for Selenium (belt-and-suspenders)
        shell: bash
        run: |
          for i in {1..60}; do
            if curl -sf http://localhost:4444/status | grep -q '"ready": true'; then
              echo "Selenium is ready"; exit 0
            fi
            echo "Waiting for Selenium... ($i/60)"; sleep 2
          done
          echo "Selenium not ready in time"; exit 1

      - name: Run scraper (attempt ${{ matrix.attempt }})
        run: Rscript scrape_nse.R

      # Commit outputs back to repo (only once, even if attempt 2 ran)
      - name: Commit results to repo (main)
        if: success() && matrix.attempt == 1
        run: |
          echo "Output dir contents:"
          ls -lah output || true

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add output/*.csv 2>/dev/null || true
          git add output/*.xlsx 2>/dev/null || true
          git add output/*_raw.json 2>/dev/null || true

          if ! git diff --cached --quiet; then
            git commit -m "Update option chain $(date -u +"%Y-%m-%d %H:%M:%S") UTC"
            git push
          else
            echo "No changes to commit."
          fi

      # OPTIONAL email step goes here (only on attempt 1). Omitted for brevity.

      - name: Upload artifacts (outputs + debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: option-chain-output
          path: |
            output/**
            debug/**
          if-no-files-found: warn
          retention-days: 30
